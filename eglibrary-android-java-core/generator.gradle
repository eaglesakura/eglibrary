buildscript {
    repositories {
        jcenter()
        maven {
            url "http://eaglesakura.github.io/maven/"
        }
    }
    dependencies {
        classpath "com.eaglesakura:eglibrary-gradle-plugin:0.2.7"
    }
}

apply from: "../path.gradle"
apply plugin: 'com.eaglesakura.android-support'

/**
 * ネットワークキャッシュ用のDB
 */
task generateNetCache(type: com.eaglesakura.gradle.tasks.AndroidDaoGenTask) {
    outDirectory = file("${EGLIBRARY_PATH_ANDROID_NET}/dao")
    classPackageBase = "com.eaglesakura.android.dao"

    def schema = newSchema(3, "net");

    /**
     * シンプルなローカルキャッシュを管理する
     */
    def DbNetCache = schema.addEntity("DbNetCache");
    // URLをキーに保存する
    DbNetCache.addStringProperty("url").notNull().unique().primaryKey();

    // データ本体
    // キャッシュタイプがDBかFILEかで保存先が変わる
    // FILEの場合、bodyにはファイル名が格納される
    DbNetCache.addIntProperty("cacheType").notNull();
    DbNetCache.addIntProperty("bodySize").notNull();
    DbNetCache.addIntProperty("blockSize").notNull(); // 1ブロックのサイズ
    // ダウンロード済みのサイズ
    // 将来的にはResume用に利用するが、当初はサポートしない
    DbNetCache.addIntProperty("downloadedSize").notNull();

    DbNetCache.addStringProperty("method").notNull();

    // キャッシュ時刻
    DbNetCache.addDateProperty("cacheTime").notNull();
    DbNetCache.addDateProperty("cacheLimit").notNull();

    // ヘッダ保存
    DbNetCache.addStringProperty("etag");

    // 検証のためのデータハッシュ
    DbNetCache.addStringProperty("hash");

    /**
     * ファイル断片を管理する。
     * １ブロック128KiB以内となる。
     * ブロック単位で挿入される。
     */
    def DbFileBlock = schema.addEntity("DbFileBlock");
    DbFileBlock.addStringProperty("url").notNull().index(); // DL元のURL
    DbFileBlock.addIntProperty("number").notNull().index(); // 番号
    DbFileBlock.addByteArrayProperty("body").notNull(); // ファイル本体
    DbFileBlock.addBooleanProperty("eof").notNull(); // 終端マーク
}