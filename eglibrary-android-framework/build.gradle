apply plugin: 'com.android.library'
apply plugin: 'android-apt'

apply from: "../path.gradle"

sourceCompatibility = 1.7
targetCompatibility = 1.7

def APPLICATION_ID = "com.eaglesakura.android"

configurations {
    apt
}

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-core:2.4.+'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.+'

    /**
     * Database
     */
    compile 'de.greenrobot:greendao:1.3.+'
    compile 'com.google.protobuf:protobuf-java:2.5.+'

    /**
     * Network
     */
    compile 'com.mcxiaoke.volley:library-aar:1.0.+@aar'
    compile 'com.google.http-client:google-http-client-android:1.18.+'

    /**
     * support libs
     */
    compile "com.android.support:support-v4:${EGLIBRARY_ANDROID_SUPPORT_LIB_VERSION}"
    compile "com.android.support:appcompat-v7:${EGLIBRARY_ANDROID_SUPPORT_LIB_VERSION}"
    compile "com.android.support:cardview-v7:${EGLIBRARY_ANDROID_SUPPORT_LIB_VERSION}"
    compile "com.android.support:recyclerview-v7:${EGLIBRARY_ANDROID_SUPPORT_LIB_VERSION}"
    compile "com.android.support:palette-v7:${EGLIBRARY_ANDROID_SUPPORT_LIB_VERSION}"
    compile "com.android.support:design:${EGLIBRARY_ANDROID_SUPPORT_LIB_VERSION}"

    /**
     * Play Service
     */
    compile "com.google.android.gms:play-services-plus:${EGLIBRARY_ANDROID_PLAYSERVICE_LIB_VERSION}"
    compile "com.google.android.gms:play-services-gcm:${EGLIBRARY_ANDROID_PLAYSERVICE_LIB_VERSION}"
    compile 'com.android.support:support-annotations:+'

    /**
     * annotations
     */
    apt "org.androidannotations:androidannotations:3.0.+"
    compile "org.androidannotations:androidannotations-api:3.0.+"

    /**
     * Joint
     */
    compile 'com.eaglesakura:joint-connector-annotation:0.1.13'
}


android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 22
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [
                    "${EGLIBRARY_PATH_JAVA_CORE}",
                    "${EGLIBRARY_PATH_JAVA_GEO}",
                    "${EGLIBRARY_PATH_JAVA_JSON}",
                    "${EGLIBRARY_PATH_ANDROID_CORE}/java",
                    "${EGLIBRARY_PATH_ANDROID_COREDEBUG}/java",
                    "${EGLIBRARY_PATH_ANDROID_CAMERA}/java",
                    "${EGLIBRARY_PATH_ANDROID_BLUETOOTH}/java",
                    "${EGLIBRARY_PATH_ANDROID_DAO}/java", "${EGLIBRARY_PATH_ANDROID_DAO}/dao",
                    "${EGLIBRARY_PATH_ANDROID_NET}/java", "${EGLIBRARY_PATH_ANDROID_NET}/dao",
                    "${EGLIBRARY_PATH_ANDROID_GLKIT}/java",
                    "${EGLIBRARY_PATH_ANDROID_GLKITMEDIA}/java",

                    "${EGLIBRARY_PATH_ANDROID_FRAMEWORK}/java", "${EGLIBRARY_PATH_ANDROID_FRAMEWORK}/prop",
                    "${EGLIBRARY_PATH_ANDROID_BEACON}/java",

                    "${EGLIBRARY_PATH_ANDROID_JOINT}/java",
            ]

            res.srcDirs = [
                    "${EGLIBRARY_PATH_ANDROID_CORE}/res",
                    "${EGLIBRARY_PATH_ANDROID_CAMERA}/res",

                    "${EGLIBRARY_PATH_ANDROID_FRAMEWORK}/res",
            ];

            aidl.srcDirs = [
                    "${EGLIBRARY_PATH_ANDROID_CORE}/aidl",
                    "${EGLIBRARY_PATH_ANDROID_BEACON}/aidl",
            ]

            assets.srcDirs = [
                    "${EGLIBRARY_PATH_ANDROID_FRAMEWORK}/assets",
            ]
        }
    }

    // ignore include
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }
}

apply plugin: 'maven'

if (!hasProperty("EGLIBRARY_ARTIFACT_VERSION")) {
    ext.EGLIBRARY_ARTIFACT_VERSION = ""
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

android.libraryVariants.all { variant ->
    if (!"release".equals(variant.name) || "".equals(EGLIBRARY_ARTIFACT_VERSION)) {
        return;
    }

    task("javadoc", type: Javadoc) {
        title = "${file(".").name} ver ${EGLIBRARY_ARTIFACT_VERSION}"
        description "Generates Android Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar) + files("build/intermediates/classes/${variant.name}/")
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://d.android.com/reference/");
        exclude '**/BuildConfig.java'
        exclude '**/*Dao.java' /* ignore greenDAO */
        exclude '**/DaoMaster.java' /* ignore greenDAO */
        exclude '**/DaoSession.java' /* ignore greenDAO */
        exclude '**/R.java' /* ignore greenDAO */
    }


    task("javadocJar", type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri(new File("${System.env.MAVEN_LOCAL_REPO}")))
            pom.version = EGLIBRARY_ARTIFACT_VERSION
            pom.groupId = "com.eaglesakura"
            pom.artifactId = file(".").absoluteFile.name;
        }
    }
}

[uploadArchives.repositories.mavenDeployer]*.pom*.whenConfigured { pom ->
    pom.project {
        inceptionYear '2011'
        packaging 'aar'
        licenses {
            license {
                name 'NYSL'
                url 'https://raw.githubusercontent.com/eaglesakura/eglibrary/master/LICENSE-NYSL-eng.txt'
            }
            license {
                name 'MIT License'
                url 'https://raw.githubusercontent.com/eaglesakura/eglibrary/master/LICENSE-MIT.txt'
            }
        }

        dependencies {
            dependency {
                groupId = 'com.eaglesakura'
                artifactId = 'eglibrary-android-java-wrapper'
                version = EGLIBRARY_ARTIFACT_VERSION
                scope = 'compile'
            }

            dependency {
                groupId = 'com.eaglesakura'
                artifactId = 'eglibrary-material-support'
                version = EGLIBRARY_ARTIFACT_VERSION
                scope = 'compile'
            }
        }
    }
}
apply from: "generator.gradle"