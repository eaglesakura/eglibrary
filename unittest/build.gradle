// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        maven { url "http://eaglesakura.github.io/maven/" }
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath "com.eaglesakura:plugin-ci-support:1.0.14"
        classpath 'me.tatarka:gradle-retrolambda:3.2.5' // support Lambda
    }
}

repositories {
    maven { url "http://eaglesakura.github.io/maven/" }
    mavenCentral()
}

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda' /* Android Lambda Support */

dependencies {

    compile project(":eglibrary:android-net")
    compile project(":eglibrary:android-framework")

    testCompile 'junit:junit:4.12'
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        applicationId "com.eaglesakura.unittest"
        minSdkVersion 15
        targetSdkVersion 22 /* not runtime permission */
        versionCode 1
        versionName "1.0"
    }
    // 署名設定
    signingConfigs {
        debug {
            storeFile file("sign/appdebug.jks")
            storePassword "appdebug"
            keyAlias "appdebug"
            keyPassword "appdebug"
        }
    }
    buildTypes {
        debug {
            // デバッグビルド時は"package名+.debug"を入れる
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
        }

    }
    lintOptions {
        disable "DuplicateIds"
        disable "NewApi"
        disable "InvalidPackage"
        disable "ProtectedPermissions"
    }

    // ignore include
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'androidannotations-api.properties'
        exclude 'services/com.fasterxml.jackson.core.JsonFactory'
        exclude 'services/com.fasterxml.jackson.core.ObjectCodec'
    }
}

/**
 * UnitTest & retro lambda
 */
tasks.withType(Test) {
    project.tasks
            .findAll {
        task -> (task.name ==~ /compile.*?TestJava.*?/)
    }
    .each { task ->
        task.doFirst {
            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8
        }
    }
}