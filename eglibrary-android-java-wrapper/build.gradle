apply plugin: 'com.android.library'
apply plugin: 'android-apt'

if (!hasProperty("EGLIBRARY_ARTIFACT_VERSION")) {
    ext.EGLIBRARY_ARTIFACT_VERSION = ""
}

configurations {
    apt
}

dependencies {
    /**
     * Database
     */
    compile 'de.greenrobot:greendao:1.3.+'
    compile 'com.google.protobuf:protobuf-java:2.5.+'

    /**
     * Network
     */
    compile 'com.mcxiaoke.volley:library-aar:1.0.+@aar'
    compile 'com.google.http-client:google-http-client-android:1.18.+'

    compile project(':eglibrary-java-wrapper')
    compile project(':eglibrary-android-java-core')
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 22
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src/main/java', 'src/main/generated/dao']
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        disable "NewApi"
    }
}

//buildscript {
//    repositories {
//        jcenter()
//
//        mavenCentral()
//
//        maven {
//            url "http://eaglesakura.github.io/maven/"
//        }
//    }
//
//    dependencies {
//        classpath 'com.eaglesakura:eglibrary-gradle-plugin:0.1.+'
//    }
//}

apply plugin: 'maven'


task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

android.libraryVariants.all { variant ->
    if (!"release".equals(variant.name) || "".equals(EGLIBRARY_ARTIFACT_VERSION)) {
        return;
    }

    task("javadoc", type: Javadoc) {
        title = "${file(".").name} ver ${EGLIBRARY_ARTIFACT_VERSION}"
        description "Generates Android Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar) + files("build/intermediates/classes/${variant.name}/")
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://d.android.com/reference/");
        exclude '**/BuildConfig.java'
        exclude '**/*Dao.java' /* ignore greenDAO */
        exclude '**/DaoMaster.java' /* ignore greenDAO */
        exclude '**/DaoSession.java' /* ignore greenDAO */
        exclude '**/R.java' /* ignore greenDAO */
    }


    task("javadocJar", type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }
}
//task javadoc(type: Javadoc) {
//    title = "Android Release API"
//    description "Generates Javadoc for Release."
//    source = android.sourceSets.main.java.srcDirs
//    ext.androidJar =
//            "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
//    classpath = files(android.libraryVariants.release.javaCompile.classpath.files) + files(ext.androidJar) + files("build/intermediates/classes/release/")
//    options.links("http://docs.oracle.com/javase/7/docs/api/");
//    options.links("http://d.android.com/reference/");
//    exclude '**/BuildConfig.java'
//    exclude '**/*Dao.java'
//    exclude '**/R.java'
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}


uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri(new File("${System.env.MAVEN_LOCAL_REPO}")))
            pom.version = EGLIBRARY_ARTIFACT_VERSION
            pom.groupId = "com.eaglesakura"
            pom.artifactId = file(".").absoluteFile.name;
        }
    }
}

[uploadArchives.repositories.mavenDeployer]*.pom*.whenConfigured { pom ->
    pom.project {
        inceptionYear '2011'
        packaging 'aar'
        licenses {
            license {
                name 'NYSL'
                url 'https://raw.githubusercontent.com/eaglesakura/eglibrary/master/LICENSE-NYSL-eng.txt'
            }
            license {
                name 'MIT License'
                url 'https://raw.githubusercontent.com/eaglesakura/eglibrary/master/LICENSE-MIT.txt'
            }
        }

        dependencies {
            dependency {
                groupId = 'com.eaglesakura'
                artifactId = 'eglibrary-java-wrapper'
                version = EGLIBRARY_ARTIFACT_VERSION
                scope = 'compile'
            }

            dependency {
                groupId = 'com.eaglesakura'
                artifactId = 'eglibrary-android-java-core'
                version = EGLIBRARY_ARTIFACT_VERSION
                scope = 'compile'
            }

            dependency {
                groupId = 'de.greenrobot'
                artifactId = 'greendao'
                version = '1.3.+'
                scope = 'compile'
            }

            dependency {

                groupId = 'com.google.protobuf'
                artifactId = 'protobuf-java'
                version = '2.5.+'
                scope = 'compile'
            }

            dependency {
                groupId = 'com.mcxiaoke.volley'
                artifactId = 'library-aar'
                version = '1.0.+'
                scope = 'compile'
            }
        }
    }
}

apply from: "generator.gradle"